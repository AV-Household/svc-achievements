// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Achievements.Specs.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Начисление бонусов и штрафов к рейтингу")]
    public partial class НачислениеБонусовИШтрафовКРейтингуFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "ChangeRating.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Начисление бонусов и штрафов к рейтингу", "Взрослые могут начислить ребенку бонус или штраф к очкам рейтинга", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Взрослый может начислить бонус к рейтингу ребенка")]
        public virtual void ВзрослыйМожетНачислитьБонусКРейтингуРебенка()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Взрослый может начислить бонус к рейтингу ребенка", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Phone",
                            "Name",
                            "Adult"});
                table10.AddRow(new string[] {
                            "father@family.com",
                            "+79180000001",
                            "Папа",
                            "да"});
                table10.AddRow(new string[] {
                            "son@family.com",
                            "+79180000004",
                            "Сын",
                            "нет"});
                table10.AddRow(new string[] {
                            "daughter@family.com",
                            "+79180000003",
                            "Дочь",
                            "нет"});
#line 6
  testRunner.Given("Семья из", ((string)(null)), table10, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "Ребенок",
                            "Очки рейтинга"});
                table11.AddRow(new string[] {
                            "Сын",
                            "130"});
                table11.AddRow(new string[] {
                            "Дочь",
                            "150"});
#line 11
  testRunner.And("Рейтинги", ((string)(null)), table11, "And ");
#line hidden
#line 15
  testRunner.And("в систему вошел Папа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
  testRunner.When("Пользователь начислил пользователю Сын бонус в 20 очков рейтинга", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                            "Ребенок",
                            "Очки рейтинга"});
                table12.AddRow(new string[] {
                            "Сын",
                            "150"});
                table12.AddRow(new string[] {
                            "Дочь",
                            "150"});
#line 17
  testRunner.Then("Рейтинги", ((string)(null)), table12, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Взрослый может начислить штраф к рейтингу ребенка")]
        public virtual void ВзрослыйМожетНачислитьШтрафКРейтингуРебенка()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Взрослый может начислить штраф к рейтингу ребенка", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 22
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Phone",
                            "Name",
                            "Adult"});
                table13.AddRow(new string[] {
                            "father@family.com",
                            "+79180000001",
                            "Папа",
                            "да"});
                table13.AddRow(new string[] {
                            "son@family.com",
                            "+79180000004",
                            "Сын",
                            "нет"});
                table13.AddRow(new string[] {
                            "daughter@family.com",
                            "+79180000003",
                            "Дочь",
                            "нет"});
#line 23
  testRunner.Given("Семья из", ((string)(null)), table13, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                            "Ребенок",
                            "Очки рейтинга"});
                table14.AddRow(new string[] {
                            "Сын",
                            "130"});
                table14.AddRow(new string[] {
                            "Дочь",
                            "150"});
#line 28
  testRunner.And("Рейтинги", ((string)(null)), table14, "And ");
#line hidden
#line 32
  testRunner.And("в систему вошел Папа", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
  testRunner.When("Пользователь начислил пользователю Дочь штраф в 50 очков рейтинга", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                            "Ребенок",
                            "Очки рейтинга"});
                table15.AddRow(new string[] {
                            "Сын",
                            "130"});
                table15.AddRow(new string[] {
                            "Дочь",
                            "100"});
#line 34
  testRunner.Then("Рейтинги", ((string)(null)), table15, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ребенок не может начислить кому либо бонус или штраф к рейтингу")]
        public virtual void РебенокНеМожетНачислитьКомуЛибоБонусИлиШтрафКРейтингу()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ребенок не может начислить кому либо бонус или штраф к рейтингу", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 39
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email",
                            "Phone",
                            "Name",
                            "Adult"});
                table16.AddRow(new string[] {
                            "father@family.com",
                            "+79180000001",
                            "Папа",
                            "да"});
                table16.AddRow(new string[] {
                            "son@family.com",
                            "+79180000004",
                            "Сын",
                            "нет"});
                table16.AddRow(new string[] {
                            "daughter@family.com",
                            "+79180000003",
                            "Дочь",
                            "нет"});
#line 40
  testRunner.Given("Семья из", ((string)(null)), table16, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                            "Ребенок",
                            "Очки рейтинга"});
                table17.AddRow(new string[] {
                            "Сын",
                            "130"});
                table17.AddRow(new string[] {
                            "Дочь",
                            "150"});
#line 45
  testRunner.And("Рейтинги", ((string)(null)), table17, "And ");
#line hidden
#line 49
  testRunner.And("в систему вошел Сын", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
  testRunner.When("Пользователь начислил пользователю Сын бонус в 1000 очков рейтинга", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                            "Ребенок",
                            "Очки рейтинга"});
                table18.AddRow(new string[] {
                            "Сын",
                            "130"});
                table18.AddRow(new string[] {
                            "Дочь",
                            "150"});
#line 51
  testRunner.Then("Рейтинги", ((string)(null)), table18, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
